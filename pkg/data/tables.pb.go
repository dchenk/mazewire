// Code generated by protoc-gen-go. DO NOT EDIT.
// source: data/tables.proto

package data

import (
	fmt "fmt"
	time "github.com/dchenk/mazewire/pkg/types/time"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// A Site is the basic settings of a site, except for the time when the site was created.
// Everything else that shapes a site is in either an Option or a Blob.
type Site struct {
	// Row ID in the table.
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// The domain (no slashes; possibly includes sub-domain).
	Domain string `protobuf:"bytes,2,opt,name=domain,proto3" json:"domain,omitempty"`
	// The name of the website.
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// The URL of the main logo file.
	Logo string `protobuf:"bytes,4,opt,name=logo,proto3" json:"logo,omitempty"`
	// The URL of the favicon file.
	Favicon string `protobuf:"bytes,5,opt,name=favicon,proto3" json:"favicon,omitempty"`
	// The primary language.
	Language string `protobuf:"bytes,6,opt,name=language,proto3" json:"language,omitempty"`
	// The status of the TLS on the domain: 0 = none, 1 = configuring, 2 = good
	Tls uint32 `protobuf:"varint,7,opt,name=tls,proto3" json:"tls,omitempty"`
	// Time of the last update.
	Updated              *time.Time `protobuf:"bytes,8,opt,name=updated,proto3" json:"updated,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Site) Reset()         { *m = Site{} }
func (m *Site) String() string { return proto.CompactTextString(m) }
func (*Site) ProtoMessage()    {}
func (*Site) Descriptor() ([]byte, []int) {
	return fileDescriptor_31971c09290c4bb0, []int{0}
}

func (m *Site) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Site.Unmarshal(m, b)
}
func (m *Site) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Site.Marshal(b, m, deterministic)
}
func (m *Site) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Site.Merge(m, src)
}
func (m *Site) XXX_Size() int {
	return xxx_messageInfo_Site.Size(m)
}
func (m *Site) XXX_DiscardUnknown() {
	xxx_messageInfo_Site.DiscardUnknown(m)
}

var xxx_messageInfo_Site proto.InternalMessageInfo

func (m *Site) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Site) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

func (m *Site) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Site) GetLogo() string {
	if m != nil {
		return m.Logo
	}
	return ""
}

func (m *Site) GetFavicon() string {
	if m != nil {
		return m.Favicon
	}
	return ""
}

func (m *Site) GetLanguage() string {
	if m != nil {
		return m.Language
	}
	return ""
}

func (m *Site) GetTls() uint32 {
	if m != nil {
		return m.Tls
	}
	return 0
}

func (m *Site) GetUpdated() *time.Time {
	if m != nil {
		return m.Updated
	}
	return nil
}

// A Blob is a general-use container for binary data.
type Blob struct {
	// Row ID in the table.
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// General field to specify what kind of blob this is.
	Role string `protobuf:"bytes,2,opt,name=role,proto3" json:"role,omitempty"`
	// Key to connect the Blob with content (not an actual foreign key).
	K int64 `protobuf:"varint,3,opt,name=k,proto3" json:"k,omitempty"`
	// The data.
	V []byte `protobuf:"bytes,4,opt,name=v,proto3" json:"v,omitempty"`
	// Time of the last update.
	Updated              *time.Time `protobuf:"bytes,5,opt,name=updated,proto3" json:"updated,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Blob) Reset()         { *m = Blob{} }
func (m *Blob) String() string { return proto.CompactTextString(m) }
func (*Blob) ProtoMessage()    {}
func (*Blob) Descriptor() ([]byte, []int) {
	return fileDescriptor_31971c09290c4bb0, []int{1}
}

func (m *Blob) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Blob.Unmarshal(m, b)
}
func (m *Blob) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Blob.Marshal(b, m, deterministic)
}
func (m *Blob) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Blob.Merge(m, src)
}
func (m *Blob) XXX_Size() int {
	return xxx_messageInfo_Blob.Size(m)
}
func (m *Blob) XXX_DiscardUnknown() {
	xxx_messageInfo_Blob.DiscardUnknown(m)
}

var xxx_messageInfo_Blob proto.InternalMessageInfo

func (m *Blob) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Blob) GetRole() string {
	if m != nil {
		return m.Role
	}
	return ""
}

func (m *Blob) GetK() int64 {
	if m != nil {
		return m.K
	}
	return 0
}

func (m *Blob) GetV() []byte {
	if m != nil {
		return m.V
	}
	return nil
}

func (m *Blob) GetUpdated() *time.Time {
	if m != nil {
		return m.Updated
	}
	return nil
}

// A Content is piece of the content of an email body. Each email must have at least one Content.
type Content struct {
	// Row ID in the table.
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// Site ID that the content is part of.
	Site int64 `protobuf:"varint,2,opt,name=site,proto3" json:"site,omitempty"`
	// Valid URL path part with no slashes.
	Slug string `protobuf:"bytes,3,opt,name=slug,proto3" json:"slug,omitempty"`
	// The ID of the author.
	Author int64 `protobuf:"varint,4,opt,name=author,proto3" json:"author,omitempty"`
	// The general type of the content, such as "page" or "post".
	Type string `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	// Either 0 or the ID of the parent in the same table.
	Parent int64 `protobuf:"varint,6,opt,name=parent,proto3" json:"parent,omitempty"`
	// Title for displaying.
	Title string `protobuf:"bytes,7,opt,name=title,proto3" json:"title,omitempty"`
	// Title to give in an HTML meta tag; optional but not null.
	MetaTitle string `protobuf:"bytes,8,opt,name=meta_title,json=metaTitle,proto3" json:"meta_title,omitempty"`
	// Description to give in an HTML meta tag; optional but not null.
	MetaDesc string `protobuf:"bytes,9,opt,name=meta_desc,json=metaDesc,proto3" json:"meta_desc,omitempty"`
	// Either blank or the published (and compiled) body, cached for quick loading.
	Body []byte `protobuf:"bytes,10,opt,name=body,proto3" json:"body,omitempty"`
	// Publication status is one of 'draft', 'published', 'unsaved', or 'trashed';
	// defaults to 'draft' in the database.
	Status string `protobuf:"bytes,11,opt,name=status,proto3" json:"status,omitempty"`
	// Time of the last update.
	Updated              *time.Time `protobuf:"bytes,12,opt,name=updated,proto3" json:"updated,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Content) Reset()         { *m = Content{} }
func (m *Content) String() string { return proto.CompactTextString(m) }
func (*Content) ProtoMessage()    {}
func (*Content) Descriptor() ([]byte, []int) {
	return fileDescriptor_31971c09290c4bb0, []int{2}
}

func (m *Content) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Content.Unmarshal(m, b)
}
func (m *Content) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Content.Marshal(b, m, deterministic)
}
func (m *Content) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Content.Merge(m, src)
}
func (m *Content) XXX_Size() int {
	return xxx_messageInfo_Content.Size(m)
}
func (m *Content) XXX_DiscardUnknown() {
	xxx_messageInfo_Content.DiscardUnknown(m)
}

var xxx_messageInfo_Content proto.InternalMessageInfo

func (m *Content) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Content) GetSite() int64 {
	if m != nil {
		return m.Site
	}
	return 0
}

func (m *Content) GetSlug() string {
	if m != nil {
		return m.Slug
	}
	return ""
}

func (m *Content) GetAuthor() int64 {
	if m != nil {
		return m.Author
	}
	return 0
}

func (m *Content) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Content) GetParent() int64 {
	if m != nil {
		return m.Parent
	}
	return 0
}

func (m *Content) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Content) GetMetaTitle() string {
	if m != nil {
		return m.MetaTitle
	}
	return ""
}

func (m *Content) GetMetaDesc() string {
	if m != nil {
		return m.MetaDesc
	}
	return ""
}

func (m *Content) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *Content) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Content) GetUpdated() *time.Time {
	if m != nil {
		return m.Updated
	}
	return nil
}

// A User contains all the basic info of registered a user.
type User struct {
	// Row ID in the table.
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// Username.
	Uname string `protobuf:"bytes,2,opt,name=uname,proto3" json:"uname,omitempty"`
	// Email address.
	Email string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	// Password, already hashed.
	Pass []byte `protobuf:"bytes,4,opt,name=pass,proto3" json:"pass,omitempty"`
	// First name.
	Fname string `protobuf:"bytes,5,opt,name=fname,proto3" json:"fname,omitempty"`
	// Last name.
	Lname string `protobuf:"bytes,6,opt,name=lname,proto3" json:"lname,omitempty"`
	// The user's role in the site being accessed in the current request.
	Role string `protobuf:"bytes,7,opt,name=role,proto3" json:"role,omitempty"`
	// Time of the last update.
	Updated              *time.Time `protobuf:"bytes,8,opt,name=updated,proto3" json:"updated,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_31971c09290c4bb0, []int{3}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *User) GetUname() string {
	if m != nil {
		return m.Uname
	}
	return ""
}

func (m *User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *User) GetPass() []byte {
	if m != nil {
		return m.Pass
	}
	return nil
}

func (m *User) GetFname() string {
	if m != nil {
		return m.Fname
	}
	return ""
}

func (m *User) GetLname() string {
	if m != nil {
		return m.Lname
	}
	return ""
}

func (m *User) GetRole() string {
	if m != nil {
		return m.Role
	}
	return ""
}

func (m *User) GetUpdated() *time.Time {
	if m != nil {
		return m.Updated
	}
	return nil
}

// A UserMeta struct contains the key and value of a meta datum for a user (along with the timestamp of the
// last update of the row). The rows in the database table are primary-keyed by both the user ID and the K.
type UserMeta struct {
	// UserId is a foreign key to a User ID.
	UserId int64  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	K      string `protobuf:"bytes,2,opt,name=k,proto3" json:"k,omitempty"`
	V      []byte `protobuf:"bytes,3,opt,name=v,proto3" json:"v,omitempty"`
	// Time of the last update.
	Updated              *time.Time `protobuf:"bytes,4,opt,name=updated,proto3" json:"updated,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *UserMeta) Reset()         { *m = UserMeta{} }
func (m *UserMeta) String() string { return proto.CompactTextString(m) }
func (*UserMeta) ProtoMessage()    {}
func (*UserMeta) Descriptor() ([]byte, []int) {
	return fileDescriptor_31971c09290c4bb0, []int{4}
}

func (m *UserMeta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserMeta.Unmarshal(m, b)
}
func (m *UserMeta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserMeta.Marshal(b, m, deterministic)
}
func (m *UserMeta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserMeta.Merge(m, src)
}
func (m *UserMeta) XXX_Size() int {
	return xxx_messageInfo_UserMeta.Size(m)
}
func (m *UserMeta) XXX_DiscardUnknown() {
	xxx_messageInfo_UserMeta.DiscardUnknown(m)
}

var xxx_messageInfo_UserMeta proto.InternalMessageInfo

func (m *UserMeta) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *UserMeta) GetK() string {
	if m != nil {
		return m.K
	}
	return ""
}

func (m *UserMeta) GetV() []byte {
	if m != nil {
		return m.V
	}
	return nil
}

func (m *UserMeta) GetUpdated() *time.Time {
	if m != nil {
		return m.Updated
	}
	return nil
}

// An Option is a key => value pair holding a small amount of data for a site, the primary key being the
// composite of the site ID and the value of K.
type Option struct {
	// Site is a foreign key to a Site ID.
	Site                 int64    `protobuf:"varint,1,opt,name=site,proto3" json:"site,omitempty"`
	K                    string   `protobuf:"bytes,2,opt,name=k,proto3" json:"k,omitempty"`
	V                    []byte   `protobuf:"bytes,3,opt,name=v,proto3" json:"v,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Option) Reset()         { *m = Option{} }
func (m *Option) String() string { return proto.CompactTextString(m) }
func (*Option) ProtoMessage()    {}
func (*Option) Descriptor() ([]byte, []int) {
	return fileDescriptor_31971c09290c4bb0, []int{5}
}

func (m *Option) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Option.Unmarshal(m, b)
}
func (m *Option) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Option.Marshal(b, m, deterministic)
}
func (m *Option) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Option.Merge(m, src)
}
func (m *Option) XXX_Size() int {
	return xxx_messageInfo_Option.Size(m)
}
func (m *Option) XXX_DiscardUnknown() {
	xxx_messageInfo_Option.DiscardUnknown(m)
}

var xxx_messageInfo_Option proto.InternalMessageInfo

func (m *Option) GetSite() int64 {
	if m != nil {
		return m.Site
	}
	return 0
}

func (m *Option) GetK() string {
	if m != nil {
		return m.K
	}
	return ""
}

func (m *Option) GetV() []byte {
	if m != nil {
		return m.V
	}
	return nil
}

// A Media represents a static media item belonging to a website.
//
// The fields Id, Ext, Site, and Name are required; the other strings default to empty strings and must not
// be null; the Uploaded time defaults to the current time in the database.
type Media struct {
	// A UUID encoded in base32 without padding.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// File extension, starting with a dot if set; optional but not null.
	Ext string `protobuf:"bytes,2,opt,name=ext,proto3" json:"ext,omitempty"`
	// Foreign key to a Site ID.
	Site int64 `protobuf:"varint,3,opt,name=site,proto3" json:"site,omitempty"`
	// A user-given name.
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// HTML "alt" tag.
	Alt string `protobuf:"bytes,5,opt,name=alt,proto3" json:"alt,omitempty"`
	// A description.
	Desc string `protobuf:"bytes,6,opt,name=desc,proto3" json:"desc,omitempty"`
	// Time when the object was uploaded.
	Uploaded             *time.Time `protobuf:"bytes,7,opt,name=uploaded,proto3" json:"uploaded,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Media) Reset()         { *m = Media{} }
func (m *Media) String() string { return proto.CompactTextString(m) }
func (*Media) ProtoMessage()    {}
func (*Media) Descriptor() ([]byte, []int) {
	return fileDescriptor_31971c09290c4bb0, []int{6}
}

func (m *Media) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Media.Unmarshal(m, b)
}
func (m *Media) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Media.Marshal(b, m, deterministic)
}
func (m *Media) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Media.Merge(m, src)
}
func (m *Media) XXX_Size() int {
	return xxx_messageInfo_Media.Size(m)
}
func (m *Media) XXX_DiscardUnknown() {
	xxx_messageInfo_Media.DiscardUnknown(m)
}

var xxx_messageInfo_Media proto.InternalMessageInfo

func (m *Media) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Media) GetExt() string {
	if m != nil {
		return m.Ext
	}
	return ""
}

func (m *Media) GetSite() int64 {
	if m != nil {
		return m.Site
	}
	return 0
}

func (m *Media) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Media) GetAlt() string {
	if m != nil {
		return m.Alt
	}
	return ""
}

func (m *Media) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *Media) GetUploaded() *time.Time {
	if m != nil {
		return m.Uploaded
	}
	return nil
}

// A SiteMessage is a notification message for a site, to be shown to all users whose role on the
// site is at least Role.
type SiteMessage struct {
	// Row ID in the table.
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// SiteId is a foreign key to a Site ID.
	SiteId int64 `protobuf:"varint,2,opt,name=site_id,json=siteId,proto3" json:"site_id,omitempty"`
	// Role is the minimum role a user must have to be shown the message.
	Role string `protobuf:"bytes,3,opt,name=role,proto3" json:"role,omitempty"`
	// K is a key to identify the message.
	K       string `protobuf:"bytes,4,opt,name=k,proto3" json:"k,omitempty"`
	Message string `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
	// Time when the message was created.
	Created              *time.Time `protobuf:"bytes,6,opt,name=created,proto3" json:"created,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *SiteMessage) Reset()         { *m = SiteMessage{} }
func (m *SiteMessage) String() string { return proto.CompactTextString(m) }
func (*SiteMessage) ProtoMessage()    {}
func (*SiteMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_31971c09290c4bb0, []int{7}
}

func (m *SiteMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SiteMessage.Unmarshal(m, b)
}
func (m *SiteMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SiteMessage.Marshal(b, m, deterministic)
}
func (m *SiteMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SiteMessage.Merge(m, src)
}
func (m *SiteMessage) XXX_Size() int {
	return xxx_messageInfo_SiteMessage.Size(m)
}
func (m *SiteMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_SiteMessage.DiscardUnknown(m)
}

var xxx_messageInfo_SiteMessage proto.InternalMessageInfo

func (m *SiteMessage) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *SiteMessage) GetSiteId() int64 {
	if m != nil {
		return m.SiteId
	}
	return 0
}

func (m *SiteMessage) GetRole() string {
	if m != nil {
		return m.Role
	}
	return ""
}

func (m *SiteMessage) GetK() string {
	if m != nil {
		return m.K
	}
	return ""
}

func (m *SiteMessage) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *SiteMessage) GetCreated() *time.Time {
	if m != nil {
		return m.Created
	}
	return nil
}

// A UserMessage is a notification message for a user.
type UserMessage struct {
	// Row ID in the table.
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// UserId is a foreign key to a User ID.
	UserId int64 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// K is a key to identify the message.
	K       string `protobuf:"bytes,3,opt,name=k,proto3" json:"k,omitempty"`
	Message string `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	// Time when the message was created.
	Created              *time.Time `protobuf:"bytes,5,opt,name=created,proto3" json:"created,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *UserMessage) Reset()         { *m = UserMessage{} }
func (m *UserMessage) String() string { return proto.CompactTextString(m) }
func (*UserMessage) ProtoMessage()    {}
func (*UserMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_31971c09290c4bb0, []int{8}
}

func (m *UserMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserMessage.Unmarshal(m, b)
}
func (m *UserMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserMessage.Marshal(b, m, deterministic)
}
func (m *UserMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserMessage.Merge(m, src)
}
func (m *UserMessage) XXX_Size() int {
	return xxx_messageInfo_UserMessage.Size(m)
}
func (m *UserMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_UserMessage.DiscardUnknown(m)
}

var xxx_messageInfo_UserMessage proto.InternalMessageInfo

func (m *UserMessage) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UserMessage) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *UserMessage) GetK() string {
	if m != nil {
		return m.K
	}
	return ""
}

func (m *UserMessage) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *UserMessage) GetCreated() *time.Time {
	if m != nil {
		return m.Created
	}
	return nil
}

func init() {
	proto.RegisterType((*Site)(nil), "data.Site")
	proto.RegisterType((*Blob)(nil), "data.Blob")
	proto.RegisterType((*Content)(nil), "data.Content")
	proto.RegisterType((*User)(nil), "data.User")
	proto.RegisterType((*UserMeta)(nil), "data.UserMeta")
	proto.RegisterType((*Option)(nil), "data.Option")
	proto.RegisterType((*Media)(nil), "data.Media")
	proto.RegisterType((*SiteMessage)(nil), "data.SiteMessage")
	proto.RegisterType((*UserMessage)(nil), "data.UserMessage")
}

func init() { proto.RegisterFile("data/tables.proto", fileDescriptor_31971c09290c4bb0) }

var fileDescriptor_31971c09290c4bb0 = []byte{
	// 660 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x54, 0x4f, 0x6f, 0xd3, 0x4e,
	0x10, 0xd5, 0xc6, 0x8e, 0x9d, 0x4c, 0xfa, 0xfb, 0xa9, 0xac, 0x0a, 0xb5, 0x8a, 0x90, 0xa2, 0xf0,
	0x47, 0x39, 0x35, 0x12, 0x5c, 0x38, 0x17, 0x2e, 0x3d, 0x54, 0x48, 0xa6, 0x5c, 0xb8, 0x54, 0x9b,
	0x78, 0x9a, 0xae, 0x62, 0x7b, 0x2d, 0xef, 0xba, 0x50, 0xce, 0x7c, 0x08, 0x6e, 0x9c, 0xf9, 0x0e,
	0x1c, 0xf9, 0x60, 0x68, 0x66, 0xed, 0x90, 0x36, 0x0d, 0xe2, 0x62, 0xbd, 0x37, 0xb3, 0xde, 0x99,
	0x7d, 0xf3, 0x76, 0xe1, 0x41, 0xa6, 0x9c, 0x9a, 0x39, 0x35, 0xcf, 0xd1, 0x1e, 0x57, 0xb5, 0x71,
	0x46, 0x86, 0x14, 0x3a, 0x7a, 0xe8, 0x6e, 0x2a, 0xb4, 0x33, 0xa7, 0x0b, 0xe4, 0x8f, 0x4f, 0x4e,
	0x7e, 0x09, 0x08, 0xdf, 0x6b, 0x87, 0xf2, 0x7f, 0xe8, 0xe9, 0x2c, 0x11, 0x63, 0x31, 0x0d, 0xd2,
	0x9e, 0xce, 0xe4, 0x23, 0x88, 0x32, 0x53, 0x28, 0x5d, 0x26, 0xbd, 0xb1, 0x98, 0x0e, 0xd3, 0x96,
	0x49, 0x09, 0x61, 0xa9, 0x0a, 0x4c, 0x02, 0x8e, 0x32, 0xa6, 0x58, 0x6e, 0x96, 0x26, 0x09, 0x7d,
	0x8c, 0xb0, 0x4c, 0x20, 0xbe, 0x54, 0xd7, 0x7a, 0x61, 0xca, 0xa4, 0xcf, 0xe1, 0x8e, 0xca, 0x23,
	0x18, 0xe4, 0xaa, 0x5c, 0x36, 0x6a, 0x89, 0x49, 0xc4, 0xa9, 0x35, 0x97, 0xfb, 0x10, 0xb8, 0xdc,
	0x26, 0xf1, 0x58, 0x4c, 0xff, 0x4b, 0x09, 0xca, 0x67, 0x10, 0x37, 0x55, 0xa6, 0x1c, 0x66, 0xc9,
	0x60, 0x2c, 0xa6, 0xa3, 0x97, 0x70, 0xcc, 0xed, 0x9f, 0xeb, 0x02, 0xd3, 0x2e, 0x35, 0xc9, 0x21,
	0x3c, 0xc9, 0xcd, 0x7c, 0xeb, 0x14, 0x12, 0xc2, 0xda, 0xe4, 0xd8, 0x9e, 0x81, 0xb1, 0xdc, 0x03,
	0xb1, 0xe2, 0xf6, 0x83, 0x54, 0xac, 0x88, 0x5d, 0x73, 0xe3, 0x7b, 0xa9, 0xb8, 0xde, 0xac, 0xd6,
	0xdf, 0x5d, 0xed, 0x47, 0x0f, 0xe2, 0x37, 0xa6, 0x74, 0x58, 0xba, 0xfb, 0x2a, 0x5a, 0xed, 0x7c,
	0xc5, 0x20, 0x65, 0xcc, 0xb1, 0xbc, 0x59, 0x76, 0x9a, 0x11, 0x26, 0x7d, 0x55, 0xe3, 0xae, 0x4c,
	0xcd, 0xc5, 0x83, 0xb4, 0x65, 0xb4, 0x96, 0x26, 0xd5, 0x8a, 0xc6, 0x98, 0xd6, 0x56, 0xaa, 0xc6,
	0xd2, 0xb1, 0x5e, 0x41, 0xda, 0x32, 0x79, 0x00, 0x7d, 0xa7, 0x5d, 0x8e, 0xac, 0xd7, 0x30, 0xf5,
	0x44, 0x3e, 0x01, 0x28, 0xd0, 0xa9, 0x0b, 0x9f, 0x1a, 0x70, 0x6a, 0x48, 0x91, 0x73, 0x4e, 0x3f,
	0x06, 0x26, 0x17, 0x19, 0xda, 0x45, 0x32, 0xf4, 0xfa, 0x53, 0xe0, 0x2d, 0xda, 0x05, 0x55, 0x9f,
	0x9b, 0xec, 0x26, 0x01, 0x16, 0x84, 0x31, 0x55, 0xb7, 0x4e, 0xb9, 0xc6, 0x26, 0x23, 0xef, 0x04,
	0xcf, 0x36, 0xb5, 0xda, 0xdb, 0xad, 0xd5, 0x4f, 0x01, 0xe1, 0x07, 0x8b, 0xf5, 0x96, 0x50, 0x07,
	0xd0, 0x6f, 0xd8, 0x49, 0x7e, 0x36, 0x9e, 0x50, 0x14, 0x0b, 0xa5, 0xf3, 0x56, 0x2b, 0x4f, 0xa8,
	0xad, 0x4a, 0x59, 0xdb, 0xce, 0x89, 0x31, 0xad, 0xbc, 0xe4, 0xff, 0xbd, 0x52, 0x9e, 0x50, 0x34,
	0xe7, 0xa8, 0x77, 0x96, 0x27, 0x6b, 0x1b, 0xc4, 0x1b, 0x36, 0xf8, 0x37, 0x63, 0x21, 0x0c, 0xa8,
	0xfb, 0x33, 0x74, 0x4a, 0x1e, 0x42, 0xdc, 0x58, 0xac, 0x2f, 0xd6, 0xc7, 0x88, 0x88, 0x9e, 0x66,
	0xde, 0x51, 0xfe, 0x18, 0x9d, 0xa3, 0x82, 0x7b, 0x1c, 0x15, 0xee, 0x2e, 0xf3, 0x1a, 0xa2, 0x77,
	0x95, 0xd3, 0xa6, 0x5c, 0xfb, 0x47, 0x6c, 0xf8, 0xe7, 0x2f, 0xfb, 0x4f, 0xbe, 0x0b, 0xe8, 0x9f,
	0x61, 0xa6, 0xd5, 0x86, 0xc0, 0x43, 0x16, 0x78, 0x1f, 0x02, 0xfc, 0xec, 0xda, 0xff, 0x08, 0xae,
	0xf7, 0x0e, 0x6e, 0x7b, 0x93, 0xf5, 0x0a, 0x37, 0xee, 0xf3, 0x3e, 0x04, 0x2a, 0x77, 0xad, 0xb0,
	0x04, 0x69, 0x15, 0xfb, 0xc5, 0xab, 0xca, 0x58, 0xbe, 0x80, 0x41, 0x53, 0xe5, 0x46, 0x65, 0x98,
	0xb1, 0xb0, 0xb7, 0x8f, 0xb6, 0xce, 0x4d, 0xbe, 0x09, 0x18, 0xd1, 0x13, 0x73, 0x86, 0xd6, 0xd2,
	0x1d, 0xbf, 0x6b, 0x84, 0x43, 0x88, 0xa9, 0x13, 0x92, 0xd5, 0x5f, 0x9a, 0x88, 0xe8, 0xe9, 0x9f,
	0xcb, 0x1b, 0xdc, 0xbd, 0xbc, 0x61, 0x27, 0x45, 0x02, 0x71, 0xe1, 0x77, 0xed, 0x1e, 0x99, 0x96,
	0x92, 0xec, 0x8b, 0x1a, 0x59, 0xf6, 0x68, 0x5b, 0xf6, 0x36, 0x35, 0xf9, 0x2a, 0x60, 0xe4, 0xc7,
	0xbb, 0xb3, 0xb5, 0x6e, 0xe2, 0xbd, 0xed, 0x89, 0x07, 0xf7, 0xb4, 0x11, 0xee, 0x6c, 0xa3, 0xbf,
	0xb3, 0x8d, 0x93, 0xe7, 0x1f, 0x9f, 0x2e, 0xb5, 0xbb, 0x6a, 0xe6, 0xc7, 0x0b, 0x53, 0xcc, 0xb2,
	0xc5, 0x15, 0x96, 0xab, 0x59, 0xa1, 0xbe, 0xe0, 0x27, 0x5d, 0xe3, 0xac, 0x5a, 0x2d, 0x67, 0xf4,
	0x84, 0xcf, 0x23, 0x7e, 0xb2, 0x5f, 0xfd, 0x0e, 0x00, 0x00, 0xff, 0xff, 0x78, 0xb2, 0x0d, 0x58,
	0xe4, 0x05, 0x00, 0x00,
}
