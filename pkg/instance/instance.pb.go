// Code generated by protoc-gen-go. DO NOT EDIT.
// source: instance/instance.proto

package instance // import "github.com/dchenk/mazewire/pkg/instance"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import time "github.com/dchenk/mazewire/pkg/types/time"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// A Status describes the status of a server instance in a cluster.
type Status int32

const (
	Status_GOOD     Status = 0
	Status_UNKNOWN  Status = 2
	Status_STOPPING Status = 3
	Status_STOPPED  Status = 4
)

var Status_name = map[int32]string{
	0: "GOOD",
	2: "UNKNOWN",
	3: "STOPPING",
	4: "STOPPED",
}
var Status_value = map[string]int32{
	"GOOD":     0,
	"UNKNOWN":  2,
	"STOPPING": 3,
	"STOPPED":  4,
}

func (x Status) String() string {
	return proto.EnumName(Status_name, int32(x))
}
func (Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_instance_bdd97b82d219174b, []int{0}
}

// An Instance is a server instance in a cluster.
type Instance struct {
	// Id is a unique identifier of the instance, typically assigned by the underlying
	// server system in which the instance is running.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Name is a name of the instance, typically assigned by the underlying server system
	// unless specified by a user upon creation of the instance.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Status describes the status of the instance.
	Status Status `protobuf:"varint,3,opt,name=status,proto3,enum=instance.Status" json:"status,omitempty"`
	// Address is a network address (e.g., IP addres or host name), without a trailing
	// slash, by which the instance may be reached using HTTPS over TCP to access the
	// system API.
	Address string `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	// LogName is the name of the log in which the instance writes its log entries.
	LogName string `protobuf:"bytes,5,opt,name=log_name,json=logName,proto3" json:"log_name,omitempty"`
	// Joined is the time at which the instance joined the cluster.
	Joined *time.Time `protobuf:"bytes,6,opt,name=joined,proto3" json:"joined,omitempty"`
	// Zone specifies where the instance is running; this field may be blank and is used
	// only as metadata for the system administrator.
	Zone                 string   `protobuf:"bytes,7,opt,name=zone,proto3" json:"zone,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Instance) Reset()         { *m = Instance{} }
func (m *Instance) String() string { return proto.CompactTextString(m) }
func (*Instance) ProtoMessage()    {}
func (*Instance) Descriptor() ([]byte, []int) {
	return fileDescriptor_instance_bdd97b82d219174b, []int{0}
}
func (m *Instance) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Instance.Unmarshal(m, b)
}
func (m *Instance) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Instance.Marshal(b, m, deterministic)
}
func (dst *Instance) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Instance.Merge(dst, src)
}
func (m *Instance) XXX_Size() int {
	return xxx_messageInfo_Instance.Size(m)
}
func (m *Instance) XXX_DiscardUnknown() {
	xxx_messageInfo_Instance.DiscardUnknown(m)
}

var xxx_messageInfo_Instance proto.InternalMessageInfo

func (m *Instance) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Instance) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Instance) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_GOOD
}

func (m *Instance) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Instance) GetLogName() string {
	if m != nil {
		return m.LogName
	}
	return ""
}

func (m *Instance) GetJoined() *time.Time {
	if m != nil {
		return m.Joined
	}
	return nil
}

func (m *Instance) GetZone() string {
	if m != nil {
		return m.Zone
	}
	return ""
}

func init() {
	proto.RegisterType((*Instance)(nil), "instance.Instance")
	proto.RegisterEnum("instance.Status", Status_name, Status_value)
}

func init() { proto.RegisterFile("instance/instance.proto", fileDescriptor_instance_bdd97b82d219174b) }

var fileDescriptor_instance_bdd97b82d219174b = []byte{
	// 286 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x3c, 0x50, 0x41, 0x4b, 0xf3, 0x40,
	0x10, 0xfd, 0x92, 0xe6, 0x4b, 0xe3, 0x54, 0x4a, 0x58, 0x10, 0x57, 0x4f, 0xa5, 0x17, 0xa3, 0x87,
	0x04, 0xea, 0xcd, 0xa3, 0x54, 0x4a, 0x11, 0x92, 0x92, 0x56, 0x04, 0x2f, 0x92, 0x66, 0x87, 0x74,
	0x6d, 0xb3, 0x1b, 0xb2, 0x5b, 0xc4, 0xfe, 0x3f, 0xff, 0x97, 0x64, 0x93, 0xf4, 0x32, 0xbc, 0x37,
	0x6f, 0x78, 0xf3, 0x78, 0x70, 0xcd, 0x85, 0xd2, 0x99, 0xc8, 0x31, 0xea, 0x41, 0x58, 0xd5, 0x52,
	0x4b, 0xe2, 0xf5, 0xfc, 0xf6, 0x4a, 0xff, 0x54, 0xa8, 0x22, 0xcd, 0x4b, 0x34, 0xa3, 0x3d, 0x98,
	0xfe, 0x5a, 0xe0, 0x2d, 0xbb, 0x1b, 0x32, 0x06, 0x9b, 0x33, 0x6a, 0x4d, 0xac, 0xe0, 0x22, 0xb5,
	0x39, 0x23, 0x04, 0x1c, 0x91, 0x95, 0x48, 0x6d, 0xb3, 0x31, 0x98, 0x04, 0xe0, 0x2a, 0x9d, 0xe9,
	0xa3, 0xa2, 0x83, 0x89, 0x15, 0x8c, 0x67, 0x7e, 0x78, 0x7e, 0xb9, 0x36, 0xfb, 0xb4, 0xd3, 0x09,
	0x85, 0x61, 0xc6, 0x58, 0x8d, 0x4a, 0x51, 0xc7, 0x18, 0xf4, 0x94, 0xdc, 0x80, 0x77, 0x90, 0xc5,
	0xa7, 0xf1, 0xfe, 0xdf, 0x4a, 0x07, 0x59, 0xc4, 0x8d, 0xfd, 0x14, 0xdc, 0x2f, 0xc9, 0x05, 0x32,
	0xea, 0x4e, 0xac, 0x60, 0x34, 0x83, 0xd0, 0x84, 0xdd, 0xf0, 0x12, 0xd3, 0x4e, 0x69, 0x62, 0x9d,
	0xa4, 0x40, 0x3a, 0x6c, 0x63, 0x35, 0xf8, 0xe1, 0x09, 0xdc, 0xf6, 0x3d, 0xf1, 0xc0, 0x59, 0x24,
	0xc9, 0xdc, 0xff, 0x47, 0x46, 0x30, 0x7c, 0x8b, 0x5f, 0xe3, 0xe4, 0x3d, 0xf6, 0x6d, 0x72, 0x09,
	0xde, 0x7a, 0x93, 0xac, 0x56, 0xcb, 0x78, 0xe1, 0x0f, 0x1a, 0xc9, 0xb0, 0x97, 0xb9, 0xef, 0x3c,
	0xdf, 0x7f, 0xdc, 0x15, 0x5c, 0xef, 0x8e, 0xdb, 0x30, 0x97, 0x65, 0xc4, 0xf2, 0x1d, 0x8a, 0x7d,
	0x54, 0x66, 0x27, 0xfc, 0xe6, 0x35, 0x46, 0xd5, 0xbe, 0x38, 0xb7, 0xba, 0x75, 0x4d, 0x6b, 0x8f,
	0x7f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xcb, 0x77, 0xca, 0xe2, 0x71, 0x01, 0x00, 0x00,
}
